
package dadkvs.server;

/* these imported classes are generated by the contract */
import dadkvs.DadkvsPaxos;
import dadkvs.DadkvsPaxosServiceGrpc;

import io.grpc.stub.StreamObserver;

public class DadkvsPaxosServiceImpl extends DadkvsPaxosServiceGrpc.DadkvsPaxosServiceImplBase {


    DadkvsServerState server_state;
    
    
    public DadkvsPaxosServiceImpl(DadkvsServerState state) {
	this.server_state = state;
	
    }
    

    @Override
    public void phaseone(DadkvsPaxos.PhaseOneRequest request, StreamObserver<DadkvsPaxos.PhaseOneReply> responseObserver) {
		DadkvsServer.debug(this.getClass().getName(), "Receive phase one request with proposal number: " + request.getPhase1Timestamp()
				+ " and sequence number: " + request.getPhase1Index());
		int sequenceNumber = request.getPhase1Index();
		int proposalNumber = request.getPhase1Timestamp();
		// TODO --> properly implement checks for highest proposal number and value
		DadkvsPaxos.PhaseOneReply reply = DadkvsPaxos.PhaseOneReply.newBuilder().setPhase1Accepted(true).build();
		responseObserver.onNext(reply);
		responseObserver.onCompleted();
    }

    @Override
    public void phasetwo(DadkvsPaxos.PhaseTwoRequest request, StreamObserver<DadkvsPaxos.PhaseTwoReply> responseObserver) {
	// for debug purposes
	System.out.println ("Receive phase two request: " + request);

    }

    @Override
    public void learn(DadkvsPaxos.LearnRequest request, StreamObserver<DadkvsPaxos.LearnReply> responseObserver) {
	// for debug purposes
	System.out.println("Receive learn request: " + request);

    }

}
