//
// Protocol buffers definition for Dadkvs Paxos Service
//
syntax = "proto3";
package dadkvs;

message PhaseOneRequest {
  int32 phase1config    = 1;
  int32 phase1index     = 2;
  int32 phase1roundNumber = 3;
}

message PhaseOneReply {
  int32 phase1config    = 1;
  int32 phase1index     = 2;
  bool  phase1accepted  = 3; // true if the request is accepted (aka, the roundnumber is bigger than the current roundnumber)
  int32 phase1reqid     = 4; // a value that has been decided via consensu in the past
  int32 phase1timestamp= 5; // the write_ts associated with the value that has been decided via consensus in the past
}

message PhaseTwoRequest {
  int32 phase2config    = 1;
  int32 phase2index     = 2;
  int32 phase2reqid     = 3; // the value that we will propose for consensus
  int32 phase2roundNumber = 4; // the round number associated with the value that we will propose for consensus
}

message PhaseTwoReply {
  int32 phase2config   = 1;
  int32 phase2index    = 2;
  bool  phase2accepted = 3;
}

message LearnRequest {
  int32 learnconfig    = 1;
  int32 learnindex     = 2;
  int32 learnreqid     = 3;
  int32 learnroundnumber = 4;
}

message LearnReply {
  int32 learnconfig   = 1;
  int32 learnindex    = 2;
  bool  learnaccepted = 3;
}

service DadkvsPaxosService {
  rpc phaseone (PhaseOneRequest) returns (PhaseOneReply);
  rpc phasetwo (PhaseTwoRequest) returns (PhaseTwoReply);
  rpc learn (LearnRequest) returns (LearnReply);
}






